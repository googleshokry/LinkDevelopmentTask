version: '3'

networks:
  laravel:


services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx-api-gateway
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
    networks:
      - laravel

  mysqldb:
    image: mariadb:10.6
    container_name: mysqldb
    restart: unless-stopped
    tty: true
    ports:
      - "13306:3306"
    environment:
      MYSQL_DATABASE: apigateway
      MYSQL_ROOT_PASSWORD: mauFJcuf5dhRMQrjj
      SERVICE_TAGS: dev
      SERVICE_NAME: mysqldb
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php-api-gateway
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer-api-gateway
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel


  artisan-api-gateway:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan-api-gateway
    volumes:
      - ./src:/var/www/html:delegated
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

volumes:
  db:
    driver: local