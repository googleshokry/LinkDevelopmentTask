version: '3'

networks:
  laravel:
    driver: bridge

services:
  catalog_service:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: catalog_service
    ports:
      - "81:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - mysqlcatalogservice

    networks:
      - laravel

  mysqlcatalogservice:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "13306:3306"
    volumes:
      - './db:/var/lib/mysql'
    environment:
      MYSQL_DATABASE: catalogservice
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysqlcatalogservice
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9001:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  composercatalogservice:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisancatalogservice:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysqlcatalogservice
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel